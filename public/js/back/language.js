/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/back/language.js":
/*!***************************************!*\
  !*** ./resources/js/back/language.js ***!
  \***************************************/
/***/ (() => {

eval("$(document).ready(function ($) {\n  var _token = $('meta[name=\"csrf-token\"]').attr('content');\n  /*\r\n      Add Lang\r\n  */\n\n\n  $('#addLang-ajax').on('submit', function (e) {\n    e.preventDefault();\n    var formData = new FormData($('#addLang-ajax')[0]);\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': _token\n      }\n    });\n    $.ajax({\n      type: \"POST\",\n      url: \"/dashboard/language\",\n      data: formData,\n      contentType: false,\n      processData: false,\n      success: function success(res) {\n        var error = $('#addLanguage .alert-danger');\n        var success = $('#addLanguage .alert-success');\n\n        if (res.status == 400) {\n          if (!success.hasClass('d-none')) {\n            success.addClass('d-none');\n          }\n\n          $.each(res.errors, function (key, err_value) {\n            error.removeClass('d-none');\n            $('#addLanguage .alert-danger strong').text(err_value);\n          });\n        }\n\n        if (res.status == 200) {\n          if (!error.hasClass('d-none')) {\n            error.addClass('d-none');\n          }\n\n          $('#addLanguage input').val('');\n          success.removeClass('d-none');\n          $('#addLanguage .alert-success strong').text(res.success);\n        }\n      }\n    });\n  });\n  /*\r\n      Edit Lang\r\n   */\n\n  $('button[data-bs-target=\"#editLanguage\"]').on('click', function (e) {\n    e.preventDefault();\n    var id = $(this).data('langid');\n    $.ajax({\n      type: \"POST\",\n      url: \"/dashboard/language/edit/\" + id,\n      data: {\n        id: id,\n        _token: _token\n      },\n      success: function success(res) {\n        var error = $('#editLanguage .alert-danger');\n\n        var _success = $('#editLanguage .alert-success');\n\n        var inputReadOnly = $('#editLanguage span.old-nameValue');\n\n        if (res.status == 400) {\n          if (!_success.hasClass('d-none')) {\n            _success.addClass('d-none');\n          }\n\n          inputReadOnly.empty();\n          $('#editLanguage .alert-danger strong').text(res.error);\n        }\n\n        if (res.status == 200) {\n          if (!error.hasClass('d-none')) {\n            error.addClass('d-none');\n          }\n\n          inputReadOnly.empty();\n          inputReadOnly.text(' \"' + res.success.name + '\"');\n          $(\"#editLang-ajax\").on('submit', function (e) {\n            e.preventDefault();\n            var formData = new FormData($('#editLang-ajax')[0]);\n            $.ajaxSetup({\n              headers: {\n                'X-CSRF-TOKEN': _token\n              }\n            });\n            $.ajax({\n              type: \"POST\",\n              url: \"/dashboard/language/edit/store/\" + res.success.id,\n              data: formData,\n              contentType: false,\n              processData: false,\n              success: function success(res) {\n                if (res.status == 400) {\n                  if (!_success.hasClass('d-none')) {\n                    _success.addClass('d-none');\n                  }\n\n                  $.each(res.errors, function (key, err_value) {\n                    _success.addClass('d-none');\n\n                    error.removeClass('d-none');\n                    $('#editLanguage .alert-danger strong').text(err_value);\n                  });\n                }\n\n                if (res.status == 200) {\n                  if (!error.hasClass('d-none')) {\n                    error.addClass('d-none');\n                  }\n\n                  $('#editLanguage input').val('');\n\n                  _success.removeClass('d-none');\n\n                  error.addClass('d-none');\n                  $('#editLanguage .alert-success strong').text(res.success);\n                }\n              }\n            });\n          });\n        }\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/back/language.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/back/language.js"]();
/******/ 	
/******/ })()
;